(self.webpackChunkmodel_preds=self.webpackChunkmodel_preds||[]).push([[6336],{6336:(e,s,t)=>{"use strict";t.r(s),t.d(s,{DiseasesModule:()=>F});var i=t(7823),o=t(8583),l=t(665),n=t(649),a=t(5512),r=t(4762),c=t(2035),d=t(639),u=t(6957);const p=["diseaseSelect"];function m(e,s){if(1&e&&(d.TgZ(0,"ion-select-option"),d._uU(1),d.qZA()),2&e){const e=s.$implicit;d.xp6(1),d.hij(" ",e.label," ")}}function f(e,s){if(1&e&&d._UZ(0,"ion-input",11),2&e){const e=d.oxw().$implicit;d.MGl("placeholder","Enter ",e.label,""),d.s9C("formControlName",e.field)}}function h(e,s){if(1&e&&(d.TgZ(0,"ion-select-option",14),d._uU(1),d.qZA()),2&e){const e=s.$implicit;d.s9C("value",e.value),d.xp6(1),d.hij(" ",e.label," ")}}function g(e,s){if(1&e&&(d.TgZ(0,"ion-select",12),d.YNc(1,h,2,2,"ion-select-option",13),d.qZA()),2&e){const e=d.oxw().$implicit;d.s9C("placeholder",e.label),d.s9C("formControlName",e.field),d.xp6(1),d.Q6J("ngForOf",e.options)}}function b(e,s){if(1&e&&(d.TgZ(0,"ion-item"),d.TgZ(1,"ion-label"),d._uU(2),d.qZA(),d.YNc(3,f,1,2,"ion-input",9),d.YNc(4,g,2,3,"ion-select",10),d.qZA()),2&e){const e=s.$implicit;d.xp6(2),d.Oqu(e.label),d.xp6(1),d.Q6J("ngIf","number"===e.type),d.xp6(1),d.Q6J("ngIf","dropdown"===e.type)}}function Z(e,s){if(1&e){const e=d.EpF();d.TgZ(0,"ion-button",15),d.NdJ("click",function(){return d.CHM(e),d.oxw(2).deleteParams()}),d._uU(1,"Clear All"),d.qZA()}}function C(e,s){if(1&e){const e=d.EpF();d.TgZ(0,"form",6),d.NdJ("ngSubmit",function(){return d.CHM(e),d.oxw().onSubmit()}),d.YNc(1,b,5,3,"ion-item",4),d.TgZ(2,"ion-button",7),d._uU(3," Submit "),d.qZA(),d.YNc(4,Z,2,0,"ion-button",8),d.qZA()}if(2&e){const e=d.oxw();d.Q6J("formGroup",e.diseaseForm),d.xp6(1),d.Q6J("ngForOf",e.params),d.xp6(3),d.Q6J("ngIf",e.paramsStored)}}const v=[{path:"",component:(()=>{class e{constructor(e,s,t,i){this.diseaseService=e,this.router=s,this.loadingController=t,this.toastController=i,this.params=[],this.diseasesList=c.B4,this.paramsStored=!1}ngOnInit(){}ionViewDidLeave(){this.diseaseForm.reset(),this.params.map(e=>delete e.default),this.diseaseSelect.value=""}createForm(e){return(0,r.mG)(this,void 0,void 0,function*(){let s={};e.forEach(e=>{s[e.field]=new l.NI(e.default||"",l.kI.required)}),this.diseaseForm=new l.cw(s),this.loading=yield this.loadingController.create()})}onDiseaseSelected(e){this.selectedDisease=this.diseasesList.find(s=>s.label===e.trim()),this.params=this.selectedDisease?this.selectedDisease.parameters:[],this.getDiseaseStoredValues(),this.createForm(this.params)}getDiseaseStoredValues(){this.params.map(e=>{this.diseaseService.getDiseaseParams(e.field).then(s=>{e.default=s,this.paramsStored=s||!1}).then(()=>this.createForm(this.params))})}onSubmit(){this.loading.present(),Object.keys(this.diseaseForm.controls).forEach(e=>{const s=this.diseaseForm.get(e).value;s&&"string"==typeof s&&this.diseaseForm.controls[e].setValue(s.trim())}),this.diseaseService.saveDiseaseParams(this.diseaseForm.value),this.diseaseService.getDiseasePredictions(this.diseaseForm.value,this.selectedDisease.label).subscribe(e=>{console.log(e),this.diseaseService.savePredictions(e,this.selectedDisease,this.params),this.loadingController.dismiss(),this.router.navigate(["/tabs/diseases/predict",{selectedDisease:this.selectedDisease.label}])},e=>{this.loadingController.dismiss()})}deleteParams(){this.diseaseForm.reset(),this.params.map(e=>delete e.default),this.diseaseService.clearStorage(),this.toastController.create({message:"Removed successfully!"})}}return e.\u0275fac=function(s){return new(s||e)(d.Y36(u.C),d.Y36(n.F0),d.Y36(i.HT),d.Y36(i.yF))},e.\u0275cmp=d.Xpm({type:e,selectors:[["app-diseases"]],viewQuery:function(e,s){if(1&e&&d.Gf(p,5),2&e){let e;d.iGM(e=d.CRH())&&(s.diseaseSelect=e.first)}},decls:12,vars:5,consts:[[3,"translucent"],[3,"fullscreen"],["multiple","false","placeholder","Please select the disease",3,"ionChange"],["diseaseSelect",""],[4,"ngFor","ngForOf"],[3,"formGroup","ngSubmit",4,"ngIf"],[3,"formGroup","ngSubmit"],["type","submit","expand","full","fill","outline","slot","end","fill","solid"],["expand","full","fill","outline","slot","end","color","danger","fill","solid",3,"click",4,"ngIf"],["type","number","class","ion-text-right",3,"placeholder","formControlName",4,"ngIf"],["multiple","false",3,"placeholder","formControlName",4,"ngIf"],["type","number",1,"ion-text-right",3,"placeholder","formControlName"],["multiple","false",3,"placeholder","formControlName"],[3,"value",4,"ngFor","ngForOf"],[3,"value"],["expand","full","fill","outline","slot","end","color","danger","fill","solid",3,"click"]],template:function(e,s){if(1&e){const e=d.EpF();d.TgZ(0,"ion-header",0),d.TgZ(1,"ion-toolbar"),d.TgZ(2,"ion-title"),d._uU(3),d.qZA(),d.qZA(),d.qZA(),d.TgZ(4,"ion-content",1),d.TgZ(5,"ion-item"),d.TgZ(6,"ion-label"),d._uU(7,"Disease"),d.qZA(),d.TgZ(8,"ion-select",2,3),d.NdJ("ionChange",function(){d.CHM(e);const t=d.MAs(9);return s.onDiseaseSelected(t.value)}),d.YNc(10,m,2,1,"ion-select-option",4),d.qZA(),d.qZA(),d.YNc(11,C,5,3,"form",5),d.qZA()}2&e&&(d.Q6J("translucent",!0),d.xp6(3),d.hij(" ",s.selectedDisease?s.selectedDisease.label:"Diseases"," "),d.xp6(1),d.Q6J("fullscreen",!0),d.xp6(6),d.Q6J("ngForOf",s.diseasesList),d.xp6(1),d.Q6J("ngIf",s.selectedDisease))},directives:[i.Gu,i.sr,i.wd,i.W2,i.Ie,i.Q$,i.t9,i.QI,o.sg,o.O5,i.n0,l._Y,l.JL,l.sg,i.YG,i.pK,i.as,l.JJ,l.u],styles:[""]}),e})()},{path:"predict",component:a.e}];let S=(()=>{class e{}return e.\u0275fac=function(s){return new(s||e)},e.\u0275mod=d.oAB({type:e}),e.\u0275inj=d.cJS({imports:[[n.Bz.forChild(v)],n.Bz]}),e})(),F=(()=>{class e{}return e.\u0275fac=function(s){return new(s||e)},e.\u0275mod=d.oAB({type:e}),e.\u0275inj=d.cJS({imports:[[i.Pc,o.ez,l.u5,l.UX,S]]}),e})()}}]);